{"version":3,"sources":["webpack://material-polyfills/./src/javascripts/converter/mermaid.ts","webpack://material-polyfills/./src/javascripts/converter/twemoji.ts","webpack://material-polyfills/./src/javascripts/index.ts","webpack://material-polyfills/webpack/bootstrap","webpack://material-polyfills/webpack/runtime/make namespace object","webpack://material-polyfills/webpack/startup"],"names":["window","mermaid","mermaidAPI","initialize","callback","id","svgElement","document","getElementById","SVGSVGElement","console","log","scaleFactor","width","clientWidth","height","clientHeight","widthPx","toString","heightPx","canvas","createElement","context","getContext","scale","offscreen","Image","onload","drawImage","image","parent","parentElement","setAttribute","toDataURL","replaceChild","xml","XMLSerializer","serializeToString","image64","btoa","unescape","encodeURIComponent","convertSVGtoPng","entries","querySelectorAll","length","forEach","imgElement","fillColor","getComputedStyle","color","serializedSVG","src","parentNode","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value"],"mappings":"2EA0DIA,OAAOC,SACPD,OAAOC,QAAQC,WAAWC,WAAW,CAGjCF,QAAS,CACLG,SAAU,SAAUC,GAChB,IAAIC,EAAaC,SAASC,eAAeH,GACpBC,aA9DNG,gBAgEfC,QAAQC,IAAI,kBAAoBN,EAAK,gBArC/B,SAAUC,GAC5B,IAAIM,EAAc,IAAQ,GACtBC,EAAQP,EAAWQ,YACnBC,EAAST,EAAWU,aACpBC,EAAUJ,EAAMK,WAAa,KAC7BC,EAAWJ,EAAOG,WAAa,KAC/BE,EAASb,SAASc,cAAc,UACpCD,EAAOP,MAAQA,EAAQD,EACvBQ,EAAOL,OAASA,EAASH,EACzB,IAAIU,EAAUF,EAAOG,WAAW,MAChCD,EAAQE,MAAMZ,EAAaA,GAC3B,IAAIa,EAAY,IAAIC,MAAMb,EAAOE,GACjCU,EAAUE,OAAS,WACfL,EAAQM,UAAUH,EAAW,EAAG,EAAGA,EAAUZ,MAAOY,EAAUV,QAC9D,IAAIc,EAAQtB,SAASc,cAAc,OAC/BS,EAASxB,EAAWyB,cACxBF,EAAMG,aAAa,MAAOZ,EAAOa,aACjCJ,EAAMG,aAAa,QAASf,GAC5BY,EAAMG,aAAa,SAAUb,GAC7BW,EAAOI,aAAaL,EAAOvB,IAE/BA,EAAW0B,aAAa,QAASf,GACjCX,EAAW0B,aAAa,SAAUb,GAClC,IAAIgB,GAAM,IAAIC,eAAgBC,kBAAkB/B,GAE5CgC,EAAU,2CADFC,KAAKC,SAASC,mBAAmBN,KAE7CV,EAAUO,aAAa,MAAOM,GAalBI,CAAgBpC,S,eCnEhC,IACQqC,KAAUpC,SAASqC,iBAAiB,kBACN,GAAlBD,EAAQE,QAExBF,EAAQG,SAAQ,SAAUxC,GACtB,IAAIyC,EAAaxC,SAASc,cAAc,OAEpC2B,EADShD,OAAOiD,iBAAiB3C,GACd4C,OAAS,OAChC5C,EAAW0B,aAAa,QAAS,QAAUgB,EAAY,KAGvD,IAAIG,GAAgB,IAAIf,eAAgBC,kBAAkB/B,GACtD8C,EAAM,6BAA+BpD,OAAOuC,KAAKY,GACrDJ,EAAWf,aAAa,MAAOoB,GAC/B9C,EAAW+C,WAAWnB,aAAaa,EAAYzC,O,oBCVvD,EAAQ,KACR,EAAQ,KAER,EAAQ,OCRJgD,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUC,QAG3C,IAAIC,EAASJ,EAAyBE,GAAY,CAGjDC,QAAS,IAOV,OAHAE,EAAoBH,GAAUE,EAAQA,EAAOD,QAASF,GAG/CG,EAAOD,QCnBfF,EAAoBK,EAAI,SAASH,GACX,oBAAXI,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeP,EAASI,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeP,EAAS,aAAc,CAAEQ,OAAO,KCHvDV,EAAoB,K","file":"material-polyfills.js","sourcesContent":["\"use strict\";\n// Convert from '.mermaid>svg' to embedded img\nvar isSVGSVGElement = function (element) {\n    return (element instanceof SVGSVGElement);\n};\n/*\nconst convertSVGto = (svgElement: SVGSVGElement) => {\n  // Create canvas for converting image to data URL\n  const image = document.createElement('img');\n  const parent = svgElement.parentElement;\n\n  const width = svgElement.clientWidth.toString() + 'px';\n  const height = svgElement.clientWidth.toString() + 'px';\n\n  image.setAttribute('width', width);\n  image.setAttribute('height', height);\n\n  svgElement.setAttribute('width', width);\n  svgElement.setAttribute('height', width);\n\n  const xml = new XMLSerializer().serializeToString(svgElement);\n  const svg64 = btoa(unescape(encodeURIComponent(xml)));\n  const image64 = 'data:image/svg+xml;base64,' + svg64;\n\n  // Get data URL encoding of image\n  image.setAttribute('src', image64);\n\n  parent.replaceChild(image, svgElement);\n}\n*/\nvar convertSVGtoPng = function (svgElement) {\n    var scaleFactor = 400.0 / 96.0; // 400 DPI\n    var width = svgElement.clientWidth;\n    var height = svgElement.clientHeight;\n    var widthPx = width.toString() + 'px';\n    var heightPx = height.toString() + 'px';\n    var canvas = document.createElement('canvas');\n    canvas.width = width * scaleFactor;\n    canvas.height = height * scaleFactor;\n    var context = canvas.getContext('2d');\n    context.scale(scaleFactor, scaleFactor);\n    var offscreen = new Image(width, height);\n    offscreen.onload = function () {\n        context.drawImage(offscreen, 0, 0, offscreen.width, offscreen.height);\n        var image = document.createElement('img');\n        var parent = svgElement.parentElement;\n        image.setAttribute('src', canvas.toDataURL());\n        image.setAttribute('width', widthPx);\n        image.setAttribute('height', heightPx);\n        parent.replaceChild(image, svgElement);\n    };\n    svgElement.setAttribute('width', widthPx);\n    svgElement.setAttribute('height', heightPx);\n    var xml = new XMLSerializer().serializeToString(svgElement);\n    var svg64 = btoa(unescape(encodeURIComponent(xml)));\n    var image64 = 'data:image/svg+xml;charset=utf-8;base64,' + svg64;\n    offscreen.setAttribute('src', image64);\n};\nif (window.mermaid) {\n    window.mermaid.mermaidAPI.initialize({\n        // flowchart: { htmlLabels: false },\n        // htmlLabels: false,\n        mermaid: {\n            callback: function (id) {\n                var svgElement = document.getElementById(id);\n                if (!isSVGSVGElement(svgElement))\n                    return;\n                console.log('converting svg(' + id + ') to dataUri');\n                // convertSVGto(svgElement);\n                convertSVGtoPng(svgElement);\n            }\n        }\n    });\n}\n","\"use strict\";\n// Convert from '.twemoji>svg' to embedded img\nvar twemojiConverter = function () {\n    var entries = document.querySelectorAll('.twemoji>svg');\n    if (!entries || entries.length == 0)\n        return;\n    entries.forEach(function (svgElement) {\n        var imgElement = document.createElement('img');\n        var styles = window.getComputedStyle(svgElement);\n        var fillColor = styles.color || '#333';\n        svgElement.setAttribute('style', \"fill:\" + fillColor + \";\");\n        //imgElement.setAttribute('style', `width:${styles.width};height:${styles.height};`)\n        //imgElement.setAttribute('style', `width:1.125rem;height:auto;`)\n        var serializedSVG = new XMLSerializer().serializeToString(svgElement);\n        var src = 'data:image/svg+xml;base64,' + window.btoa(serializedSVG);\n        imgElement.setAttribute('src', src);\n        svgElement.parentNode.replaceChild(imgElement, svgElement);\n    });\n};\ntwemojiConverter();\n","\"use strict\";\n// DOM modification for WeasyPrint.\n//\n// This script run on headless-chrome.\n//\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./converter/twemoji\");\nrequire(\"./converter/mermaid\");\n// and re-definition styles\nrequire(\"../stylesheets/polyfills.scss\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(680);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}